#!/usr/bin/env node
import fs from"fs";import Yargs from"yargs";import{hideBin}from"yargs/helpers";import Configstore from"configstore";import{newProfile}from"./new.js";import{askAction,askProfile,askTxId}from"./inquirer.js";import{post}from"./post.js";import{importProfile}from"./import.js";import{getBalance}from"./bitcoin.js";import{loadSats,transferSats}from"./sats.js";import{deleteProfile,editProfile,resendIdTx}from"./profile.js";export const DEBUG=!1;export const APP_NAME="bsocial.cli";const conf=new Configstore("bsocial-cli"),options=Yargs(hideBin(process.argv)).usage("Usage: -p <profile file>").option("p",{alias:"profile",describe:"Profile to use",type:"string"}).option("l",{alias:"location",describe:"Show the location of the config file",type:"string"}).option("m",{alias:"message",describe:"Message to send on-chain",type:"string"}).option("t",{alias:"txId",describe:"Reply to transaction ID",type:"string"}).argv;options.location&&(console.log("Config stored at:",conf.path),process.exit(0));let fsMessage;try{fsMessage=fs.readFileSync(process.stdin.fd).toString()}catch(a){}const run=async()=>{for(let a=options.profile;;){for(;!a;){const b=await askProfile(conf);a="+ import"===b.profile?await importProfile(conf):"+ new"===b.profile?await newProfile(conf):b.profile}a||(console.error("No profile selected"),process.exit(-1));const b=conf.get(a);b&&b.xpriv&&b.ids||(console.error("Profile is not valid"),process.exit(-1));const c=await getBalance(b);if(0>=c?(console.log("Address does not have any satoshis. Please fund this address to post from this program.\n"),loadSats(b),process.exit(-1)):console.log("Current wallet balance:",c),fsMessage)await post(b,fsMessage.trim(),options.txId),process.exit(0);else if(options.message)await post(b,options.message,options.txId),process.exit(0);else for(;;){const c=await askAction(conf);if("post"===c.action)await post(b,"");else if("reply"===c.action){const a=await askTxId();await post(b,"",a.txid)}else if("transfer sats"===c.action)await transferSats(b);else if("load sats"===c.action)loadSats(b);else if("edit profile"===c.action)await editProfile(b);else if("resend id tx"===c.action)await resendIdTx(b);else if("delete profile"===c.action){const c=await deleteProfile(a,b,conf);if(c){a=null;break}}else if("back"===c.action){a=null;break}else"exit"===c.action&&process.exit(0)}}};run();